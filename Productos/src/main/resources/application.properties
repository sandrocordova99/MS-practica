spring.application.name=productos

#spring.profiles.active=dev

#Se borra en al usar docker
#spring.config.import=optional:configserver:http://configserve:8080

server.port=8082

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
# O usa 'update' si ya tienes datos que no quieres perder
# spring.jpa.hibernate.ddl-auto=update

# Para ver las consultas SQL que ejecuta
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Hasta que no este definido en el docker-compose
#spring.datasource.url=jdbc:mysql://localhost:3306/practica_db?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=mysql

#------------------------------------------------EUREKA------------------------------------------------
#Eureka registra el microservicio con su IP en lugar del hostname
eureka.instance.preferIpAddress=true

#Servicio se registra en eureka
eureka.client.registerWithEureka=true

#Descarga la lista de servicios del eureka
eureka.client.fetchRegistry=true

#Define la url del servidor de eureka
#Definir el puerto y ¿? creo que la ruta
eureka.client.serviceUrl.defaultZone=http://localhost:8090/eureka/


#--Propiedades de informacion del servicio
#nombre de la app del endpoint
info.app.name=productos

# description
info.app.description=Microservicio de productos

#version
info.app.version=1.0.0

#--Propiedades para apagar la app vía endpoint--
#Permite apagar la app via shutdown
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.include=shutdown

#Informacion que jala eureka del config hacia el servicio
management.info.env.enabled=true